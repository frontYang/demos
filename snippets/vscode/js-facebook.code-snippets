{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "javascript,typescript",
		"prefix": "js-facebook",
		"body": [
			"(function (window, factory) {",
			"\tif (typeof exports === 'object') {",
			"\t\tmodule.exports = factory();",
			"\t} else if (typeof define === 'function' && define.amd) {",
			"\t\tdefine(factory);",
			"\t} else {",
			"\t\twindow.FBUtil = factory();",
			"\t}",
			"})(this, function () {",
			"\t;(function (d, s, id) {",
			"\t\tvar js, fjs = d.getElementsByTagName(s)[0];",
			"\t\tif (d.getElementById(id)) return;",
			"\t\tjs = d.createElement(s); js.id = id;",
			"\t\tjs.src = 'https://connect.facebook.net/zh_CN/sdk.js#xfbml=1&version=v4.0';",
			"\t\tfjs.parentNode.insertBefore(js, fjs);",
			"\t}(document, 'script', 'facebook-jssdk'));",
			"",
			"\tvar FBUtil = {",
			"\t\t// 初始化",
			"\t\tinit(params) {",
			"\t\t\tvar self = this",
			"\t\t\tthis.loginIntf = params.loginIntf",
			"",
			"\t\t\tsetTimeout(function () {",
			"\t\t\t\tFB.init({",
			"\t\t\t\t\tappId: params.appid,",
			"\t\t\t\t\tcookie: true,",
			"\t\t\t\t\txfbml: true,",
			"\t\t\t\t\tversion: 'v4.0'",
			"\t\t\t\t});",
			"",
			"\t\t\t\twindow.fbAsyncInit = function () {",
			"\t\t\t\t\tFB.getLoginStatus(function (response) {",
			"\t\t\t\t\t\tself.statusChangeCallback(response);",
			"\t\t\t\t\t});",
			"\t\t\t\t};",
			"\t\t\t}, 1000)",
			"\t\t},",
			"",
			"\t\t// 分享",
			"\t\tshare(callback) {",
			"\t\t\tFB.ui({",
			"\t\t\t\tmethod: 'share',",
			"\t\t\t\thref: window.location.href,",
			"\t\t\t}, (response) => {",
			"\t\t\t\tif (response && !response.error_message) {",
			"\t\t\t\t\t// 分享成功",
			"\t\t\t\t\tcallback && callback(response)",
			"\t\t\t\t}",
			"\t\t\t});",
			"\t\t},",
			"",
			"\t\t// 服务器登录接口请求，获取相关信息",
			"\t\tloginApi() {",
			"\t\t\tvar self = this",
			"\t\t\tFB.api(this.loginIntf, function (response) {",
			"\t\t\t\tconsole.log('Successful login for: ' + response.name);",
			"\t\t\t\tself.loginCallback && self.loginCallback(response)",
			"\t\t\t});",
			"\t\t},",
			"",
			"\t\t// 获取登录状态",
			"\t\tcheckLoginState() {",
			"\t\t\tvar self = this",
			"\t\t\tFB.getLoginStatus(function (response) {",
			"\t\t\t\tself.statusChangeCallback(response);",
			"\t\t\t});",
			"\t\t},",
			"",
			"\t\t// 状态改变回调",
			"\t\tstatusChangeCallback(response) {",
			"\t\t\tif (response.status === 'connected') {",
			"\t\t\t\tthis.loginApi();",
			"\t\t\t} else {",
			"\t\t\t\tconsole.log('Please log into this app.');",
			"\t\t\t}",
			"\t\t}",
			"\t}",
			"",
			"\treturn FBUtil",
			"});",

			"/*",
			"html：",
			"<!-- 分享 -->",
			"<div class=\"facebook btn-share\">facebook分享</div>",
			"<!-- 登录 -->",
			"<fb:login-button scope=\"public_profile,email\" onlogin=\"FBUtil.checkLoginState();\">登录</fb:login-button>",
			"<!-- 登录状态 -->",
			"<div id=\"status\"></div>",
		"",
			"// js",
			"FBUtil.init({",
      "  appid: '884858771882601',",
      "  loginIntf: '', // 登录请求接口",
      "  loginCallback(response) {",
      "    // 登录成功回调",
      "    document.getElementById('status').innerHTML =",
      "      'Thanks for logging in, ' + response.name + '!';",
      "  }",
      "});",
"",
      "var btnShare = document.querySelector('.btn-share')",
      "btnShare.addEventListener('click', function(){",
      "  FBUtil.share(function(response){",
      "    // 分享成功回调",
      "  })",
      "})",
			"*/",
		],
		"description": "js库 => facebook api 封装"
	}
}